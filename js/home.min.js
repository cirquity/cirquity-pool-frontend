/*!
 * Cirquity - Cirquity v0.1.0 (https://cirquity.com)
 * Copyright 2020-2021 The Cirquity Developers
 * Licensed under MIT (https://github.com/cirquity/cirquity-pool/blob/master/LICENSE)
 */

!function(t){let o,e=!1,a=null,l={type:"line",width:"100%",height:"190",lineColor:"#335eea",fillColor:"rgba(51,94,234,0.3)",spotColor:null,minSpotColor:null,maxSpotColor:null,highlightLineColor:"#42ba96",spotRadius:3,chartRangeMin:0,drawNormalOnTop:!1,tooltipFormat:"<b>{{y}}</b> &ndash; {{offset:names}}"};t((function(){currentPage={destroy:function(){t("#networkLastBlockFound, #poolLastBlockFound").timeago("dispose")},update:function(o){e&&t.updateHome(o)}};let a=setInterval((function(){lastStats&&(t("#networkLastBlockFound, #poolLastBlockFound").timeago(),t.initTemplate(lastStats,mergedStats),t.loadTranslations(),o=t.ajax({url:api+"/stats",cache:!1,success:t.homeCreateCharts}),clearInterval(a))}),10)})),t.updateHome=function(o){let e=o===parentCoin?lastStats:mergedStats[o];if(e){if(t.generateNetworkStats(o,e.config.symbol),a||t("#poolLastBlockFound").removeAttr("title").data("ts","").update("Never"),e.pool.lastBlockFound){let o=parseInt(e.pool.lastBlockFound);o>a&&(a=o,t("#poolLastBlockFound").timeago("update",new Date(a).toISOString()))}if(e.pool.lastBlockFoundSolo){let o=parseInt(e.pool.lastBlockFoundSolo);o>a&&(a=o,t("#poolLastBlockFound").timeago("update",new Date(a).toISOString()))}let l=e.lastblock.reward-e.lastblock.reward*(e.config.networkFee?e.config.networkFee/100:0),s=lastStats.pool.hashrateSolo/(lastStats.network.difficulty/lastStats.config.coinDifficultyTarget)*100,n=lastStats.pool.hashrate/(lastStats.network.difficulty/lastStats.config.coinDifficultyTarget)*100,r=t.updateText("lastHash",lastStats.lastblock.hash);r&&r.setAttribute("href",t.getBlockchainUrl(lastStats.lastblock.hash,lastStats)),t.updateText(`networkHashrate${o}`,t.getReadableHashRateString(e.network.difficulty/e.config.coinDifficultyTarget)+"/sec"),t.updateText(`networkDifficulty${o}`,t.formatNumber(e.network.difficulty.toString(),",")),t.updateText(`blockchainHeight${o}`,t.formatNumber(e.network.height.toString(),",")),t.updateText(`networkLastReward${o}`,t.getReadableCoin(e,l)),t.updateText(`poolMiners${o}`,`Prop: ${e.pool.miners} — Solo: ${e.pool.minersSolo}`),t.updateText(`blocksTotal${o}`,`Prop: ${e.pool.totalBlocks} — Solo: ${e.pool.totalBlocksSolo}`),t.updateText(`currentEffort${o}`,(e.pool.roundHashes/e.network.difficulty*100).toFixed(1)+"%"),t.updateText("poolHashrate",t.getReadableHashRateString(lastStats.pool.hashrate)+"/sec"),t.updateText("poolHashrateSolo",t.getReadableHashRateString(lastStats.pool.hashrateSolo)+"/sec"),t.updateText("hashPowerSolo",s.toFixed(2)+"%"),t.updateText("hashPower",n.toFixed(2)+"%"),t.updateText("blockSolvedTime",t.getReadableTime(lastStats.network.difficulty/(lastStats.pool.hashrate+lastStats.pool.hashrateSolo)))}},t.generateNetworkStats=function(o,e){if(0===t(`#networkStats${o}`).length){let a=t("#siblingTemplate").html();if(a){Mustache.parse(a);let l=Mustache.render(a,{coin:o,symbol:e});t("#networkStats").append(l)}}},t.initTemplate=function(o,a){t("#networkLastBlockFound").timeago("update",new Date(1e3*o.lastblock.timestamp).toISOString());let l=o.config.coin,s=[],n=[];if(0===t(`#networkStats${l}`).length){s.push({blocks:o.pool.totalBlocks.toString(),blocksSolo:o.pool.totalBlocksSolo.toString(),coin:l,symbol:o.config.symbol,miners:o.pool.miners.toString(),minersSolo:o.pool.minersSolo.toString()}),n.push({coin:l,effort:`${(o.pool.roundHashes/o.network.difficulty*100).toFixed(1)}%`,symbol:o.config.symbol});let e=t("#siblingTemplate").html();Mustache.parse(e);let a=Mustache.render(e,{coin:l,symbol:o.config.symbol});t("#networkStats").append(a)}let r=null;o.pool.lastBlockFound&&(r=parseInt(o.pool.lastBlockFound)),t.updateText(`networkHashrate${l}`,t.getReadableHashRateString(o.network.difficulty/o.config.coinDifficultyTarget)+"/sec"),t.updateText(`networkDifficulty${l}`,t.formatNumber(o.network.difficulty.toString(),",")),t.updateText(`blockchainHeight${l}`,t.formatNumber(o.network.height.toString(),","));let i=o.lastblock.reward-o.lastblock.reward*(o.config.networkFee?o.config.networkFee/100:0);if(t.updateText(`networkLastReward${l}`,t.getReadableCoin(o,i)),Object.keys(a).forEach(o=>{if(t.generateNetworkStats(o,a[o].config.symbol),s.push({blocks:a[o].pool.totalBlocks.toString(),blocksSolo:a[o].pool.totalBlocksSolo.toString(),coin:o,symbol:a[o].config.symbol,miners:a[o].pool.miners.toString(),minersSolo:a[o].pool.minersSolo.toString()}),n.push({coin:o,effort:`${(a[o].pool.roundHashes/a[o].network.difficulty*100).toFixed(1)}%`,symbol:a[o].config.symbol}),a[o].pool.lastBlockFound){let t=parseInt(a[o].pool.lastBlockFound);t>r&&(r=t)}t.updateText(`networkHashrate${o}`,t.getReadableHashRateString(a[o].network.difficulty/a[o].config.coinDifficultyTarget)+"/sec"),t.updateText(`networkDifficulty${o}`,t.formatNumber(a[o].network.difficulty.toString(),",")),t.updateText(`blockchainHeight${o}`,t.formatNumber(a[o].network.height.toString(),",")),t.updateText(`poolMiners${o}`,`Prop: ${a[o].pool.miners} — Solo: ${a[o].pool.minersSolo}`),t.updateText(`blocksTotal${o}`,`Prop: ${a[o].pool.totalBlocks} — Solo: ${a[o].pool.totalBlocksSolo}`),t.updateText(`currentEffort${o}`,(a[o].pool.roundHashes/a[o].network.difficulty*100).toFixed(1)+"%")}),t.sortElementList(t("#networkStats"),t("#networkStats > div"),a),0===t("#poolDetails > div").length){let e=t("#poolDetailTemplate").html();Mustache.parse(e);let a=Mustache.render(e,{coin:o.config.coin,symbol:o.config.symbol,blocks:s});t("#poolDetails").append(a)}if(0===t("#mainPoolStats > div").length){let e=t("#mainPoolTemplate").html();Mustache.parse(e);let a=Mustache.render(e,{coin:o.config.coin,blocks:s,efforts:n});t("#mainPoolStats").append(a)}r?t("#poolLastBlockFound").timeago("update",new Date(r).toISOString()):t("#poolLastBlockFound").removeAttr("title").data("ts","").update("Never");let c=t.updateText("lastHash",o.lastblock.hash);c&&c.setAttribute("href",t.getBlockchainUrl(o.lastblock.hash,o)),t.updateText("poolHashrate",`${t.getReadableHashRateString(o.pool.hashrate)}/sec`),t.updateText("poolHashrateSolo",`${t.getReadableHashRateString(o.pool.hashrateSolo)}/sec`);let p=o.pool.hashrateSolo/(o.network.difficulty/o.config.coinDifficultyTarget)*100;t.updateText("hashPowerSolo",p.toFixed(2)+"%");let d=o.pool.hashrate/(o.network.difficulty/o.config.coinDifficultyTarget)*100;t.updateText("hashPower",d.toFixed(2)+"%"),t.updateText(`poolMiners${l}`,`Prop: ${o.pool.miners} — Solo: ${o.pool.minersSolo}`),t.updateText(`blocksTotal${l}`,`Prop: ${o.pool.totalBlocks} — Solo: ${o.pool.totalBlocksSolo}`);let h=o.config.fee;if(Object.keys(o.config.donation).length){let t=0;for(let e in o.config.donation)t+=o.config.donation[e];h+=t}t.updateText("poolFee",(h>0&&100!==h?t.floatToString(h):100===h?"100":"0")+"%"),t.updateText("paymentsInterval",t.getReadableTime(o.config.paymentsInterval)),t.updateText("paymentsMinimum",t.getReadableCoin(o,o.config.minPaymentThreshold)),t.updateText("blockSolvedTime",t.getReadableTime(o.network.difficulty/(o.pool.hashrate+o.pool.hashrateSolo))),t.updateText(`currentEffort${l}`,(o.pool.roundHashes/o.network.difficulty*100).toFixed(1)+"%"),e=!0},t.generateNetworkStats=function(o,e){if(0===t(`#networkStats${o}`).length){let a=t("#siblingTemplate").html();if(a){Mustache.parse(a);let l=Mustache.render(a,{coin:o,symbol:e});t("#networkStats").append(l)}}},t.homeCreateCharts=function(o){if(o.hasOwnProperty("charts")){let e={hashrate:{data:[t.homeGetGraphData(o.charts.hashrate),t.homeGetGraphData(o.charts.hashrateSolo)],options:{lineColor:"#fad776",fillColor:"rgba(250,215,118,0.5)"}},diff:{data:[t.homeGetGraphData(o.charts.difficulty)]},miners:{data:[t.homeGetGraphData(o.charts.miners),t.homeGetGraphData(o.charts.minersSolo)],options:{lineColor:"#fad776",fillColor:"rgba(250,215,118,0.5)"}},workers:{data:[t.homeGetGraphData(o.charts.workers),t.homeGetGraphData(o.charts.workersSolo)],options:{lineColor:"#fad776",fillColor:"rgba(250,215,118,0.5)"}}};for(let o in e)if(e[o].data[0].values.length>1){let a=jQuery.extend({},l);a.tooltipValueLookups={names:e[o].data[0].names};let s=t("[data-chart="+o+"] .chart");s.closest(".poolChart").show(),a.tooltipFormat=e[o].data[1]?'<span style="color: rgb(51,94,234);">PROP: {{y}}</span> &ndash; {{offset:names}}':"<span>{{y}}</span> &ndash; {{offset:names}}",s.sparkline(e[o].data[0].values,a),e[o].data[1]&&(a.composite=!0,a.lineColor=e[o].options.lineColor,a.fillColor=e[o].options.fillColor,a.tooltipFormat='<span style="color: #fad776;">SOLO: {{y}}</span> &ndash; {{offset:names}}',s.sparkline(e[o].data[1].values,a))}}},t.homeGetGraphData=function(o,e){let a={names:[],values:[]};if(o)for(let l,s=0;l=o[s];s++)a.names.push(new Date(1e3*l[0]).toLocaleString()),a.values.push(e?t.getReadableCoin(lastStats,l[1],null,!0):l[1]);return a}}(jQuery);